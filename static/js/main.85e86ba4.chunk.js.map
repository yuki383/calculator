{"version":3,"sources":["components/Button.tsx","actions/calculatorAction.ts","constants/common.ts","components/ButtonPannel.tsx","components/Display.tsx","reducers/index.ts","index.tsx","components/CalculatorApp.tsx"],"names":["disideButtonColor","expr","includes","connectButton","connect","state","ownProps","Object","objectSpread","calcActionCreator","input","type","payload","Update","Calculate","Clear","props","buttonColor","buttonClassName","react_default","a","createElement","onClick","className","ButtonPanel","_dicideButtonColor","_createButton","clearOption","this","display","React","Component","connectButtonPanel","connectDicplay","disp","option","result","toString","initialState","updateInput","indexOf","startsWith","substring","calculateResult","clearInputs","store","createStore","arguments","length","undefined","action","console","log","newInput","parseFloat","newStates","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.85e86ba4.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Expr, Store } from \"../store\";\nimport { calcActionCreator} from \"../actions/calculatorAction\";\n\ninterface ButtonProps {\n  expr: string\n  calcActionCreator: (expr: string) => void;\n}\n\nconst Button = (props: ButtonProps) => {\n  const { expr, calcActionCreator } = props\n  const buttonColor = disideButtonColor(expr);\n  const buttonClassName = expr === \"0\" ? \" button-zero\" : \" button\";\n  return (\n    <button onClick={() => calcActionCreator(expr)} className={buttonColor + buttonClassName}>{expr}</button>\n  )\n  }\n\n\nconst disideButtonColor = (expr: string): string => {\n  if ([\"AC\", \"C\", \"+/-\", \"%\"].includes(expr)) {\n    return \"btn btn-secondary\"\n  } else if ([\"/\", \"*\", \"-\", \"+\", \"=\"].includes(expr)) {\n    return \"btn btn-warning\"\n  } else {\n    return \"btn btn-dark\"\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: any) => ({\n  ...ownProps\n})\n\nconst connectButton = connect(\n  mapStateToProps,\n  { calcActionCreator }\n)(Button);\n\nexport { connectButton as Button };","import { update, calculate, clear, Action } from \"../constants/common\";\nimport { Option, Nums, Clears, Expr } from \"../store\";\nimport { string } from \"prop-types\";\n\nconst Update = (expr: Nums): Action => ({\n  type: update,\n  payload: {\n    expr\n  }\n});\n\nconst Calculate = (expr: Option) => ({\n  type: calculate,\n  payload: {\n    expr\n  }\n});\n\nconst Clear = (expr: Clears) => ({\n  type: clear,\n  payload: {\n    expr\n  }\n})\n\nconst typeOfExpr = (expr: Expr): string => {\n  if([\"+\", \"-\", \"*\", \"/\", \"%\", \"=\"].includes(expr)) {\n    return \"options\"\n  } else if([\"AC\", \"C\"].includes(expr)) {\n    return \"clears\"\n  } else {\n    return \"nums\"\n  }\n}\n\nexport const calcActionCreator = (input: string): Action => {\n  switch (typeOfExpr(<Expr>input)) {\n    case \"nums\":\n      return Update(<Nums>input);\n    case \"options\":\n      return Calculate(<Option>input);\n    // case \"clears\"\n    default:\n      return Clear(<Clears>input);\n  }\n}","export const update = \"update\";\nexport const calculate = \"calculate\";\nexport const clear = \"clear\";\n\nexport interface Action {\n  type: string;\n  payload: {\n    expr: string;\n  };\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Button } from \"./Button\";\nimport { Store } from \"../store\";\n\ninterface ButtonPanelProps {\n  display: string\n}\n\nclass ButtonPanel extends React.Component<ButtonPanelProps, any> {\n\n  render() {\n    const { display } = this.props;\n    const clearOption = display === \"0\" ? \"AC\" : \"C\"\n    return (\n      <div className=\"button-panel\">\n        <div className=\"button-row\">\n          {this._createButton(clearOption)}\n          {this._createButton(\"+/-\")}\n          {this._createButton(\"%\")}\n          {this._createButton(\"/\")}\n        </div>\n        <div className=\"button-row\">\n          {this._createButton(\"7\")}\n          {this._createButton(\"8\")}\n          {this._createButton(\"9\")}\n          {this._createButton(\"*\")}\n        </div>\n        <div className=\"button-row\">\n          {this._createButton(\"4\")}\n          {this._createButton(\"5\")}\n          {this._createButton(\"6\")}\n          {this._createButton(\"-\")}\n        </div>\n        <div className=\"button-row\">\n          {this._createButton(\"1\")}\n          {this._createButton(\"2\")}\n          {this._createButton(\"3\")}\n          {this._createButton(\"+\")}\n        </div>\n        <div className=\"button-row\">\n          {this._createButton(\"0\")}\n          {this._createButton(\".\")}\n          {this._createButton(\"=\")}\n        </div>\n      </div>\n    )\n  }\n\n  private _dicideButtonColor = (expr: string): string => {\n    if ([\"AC\", \"C\", \"+/-\", \"%\"].includes(expr)) {\n      return \"secondary\"\n    } else if ([\"/\", \"*\", \"-\", \"+\", \"=\"].includes(expr)) {\n      return \"warning\"\n    } else {\n      return \"dark\"\n    }\n  }\n\n  private _createButton = (expr: string) => {\n    return <Button expr={expr} />\n  }\n\n}\n\nconst mapStateToProps = (state: Store) => ({ display: state.input });\n\nconst connectButtonPanel = connect(\n  mapStateToProps\n)(ButtonPanel);\n\nexport { connectButtonPanel as ButtonPanel };","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Store } from \"../store\"; \n\ninterface DisplayProps {\n  store: Store;\n}\n\nconst Display = (props: Store) => {\n  const { input, option, result } = props\n  const disp = input + \" \" +  option + \" \" + result.toString();\n  return (\n    <div className=\"display\" >{disp}</div>\n  )\n}\n\nconst connectDicplay = connect(\n  (state: Store) => ({ ...state })\n)(Display)\n\nexport { connectDicplay as Display };","import { combineReducers } from \"redux\";\nimport { createReducer } from \"redux-starter-kit\";\n\nimport { Store, Expr } from \"../store\"\nimport { update, calculate, clear, Action } from \"../constants/common\";\n\nconst initialState: Store = {\n  input: \"0\",\n  option: \"+\",\n  result: 0,\n}\n\n/* TODO:\n \n*/\n\nexport const CalculatorReducer = (state: Store = initialState, action: Action) => {\n  console.log(action);\n  console.log(state)\n  switch (action.type) {\n    case update: {\n      const { expr } = action.payload;\n      const { input } = state;\n      const newInput = updateInput(input, expr);\n      return {\n        ...state,\n        input: newInput\n      }\n    }\n\n    case calculate: {\n      const { expr } = action.payload;\n      const { input, option, result } = state;\n      const newResult = calculateResult(result, parseFloat(input), option);\n      const newOption = expr !== \"=\" ? expr : \"+\";\n      return {\n        input: \"0\",\n        option: newOption,\n        result: newResult\n      }\n    }\n\n    case clear: {\n      const { expr } = action.payload;\n      const newStates = clearInputs(expr);\n      return {\n        ...state,\n        ...newStates\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst updateInput = (input: string, expr: string): string => {\n  switch (expr) {\n    case \".\":\n      if (input.indexOf(\".\") === -1) {\n        return input + expr;\n      }\n      return input;\n    case \"+/-\":\n      if (input === \"0\") {\n        return input\n      }\n      return input.startsWith(\"-\") ?\n        input.substring(1) : \"-\" + input;\n    default:\n      return input === \"0\" ? expr : input + expr;\n  }\n}\n\nconst calculateResult = (result: number, input: number, option: string): number => {\n  switch (option) {\n    case \"+\":\n      return result + input;\n    case \"-\":\n      return result - input;\n    case \"*\":\n      return result * input;\n    case \"/\":\n      return input === 0 ? result : result / input;\n    default: // case \"%\":\n      return input === 0 ? result : result % input;\n  }\n}\n\nconst clearInputs = (expr: string): object => {\n  if (expr === \"AC\") {\n    return {\n      input: \"0\",\n      option: \"+\",\n      result: 0\n    }\n  } else {\n    return {\n      input: \"0\"\n    }\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport { CalculatorApp } from \"./components/CalculatorApp\";\nimport { CalculatorReducer }  from \"./reducers\";\n\nimport \"./App.css\"\n\nconst store = createStore(CalculatorReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <CalculatorApp/>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n","import React from \"react\";\nimport { ButtonPanel } from \"./ButtonPannel\";\nimport { Display } from \"./Display\";\n\nexport const CalculatorApp = () => {\n  return (\n    <div className=\"calculatorApp\">\n      <Display />\n      <ButtonPanel />\n    </div>\n  );\n};"],"sourceRoot":""}